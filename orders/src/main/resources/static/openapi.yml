openapi: 3.0.0
info:
  title: Order Management API
  description: API for managing orders
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1/orders
    description: Local server
tags:
  - name: Order Management
    description: API for managing orders
paths:
  /all:
    get:
      summary: Get all orders
      description: Returns a list of all orders
      tags:
        - Order Management
      responses:
        '200':
          description: Successfully retrieved list
        '404':
          description: The resource you were trying to reach is not found
  /{id}:
    get:
      summary: Get order by id
      description: Returns order by id
      tags:
        - Order Management
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully retrieved order
        '404':
          description: The resource you were trying to reach is not found
    delete:
      summary: Delete order by id
      description: Delete order
      tags:
        - Order Management
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully done
        '404':
          description: The resource you were trying to reach is not found
  /create:
    post:
      summary: Create order
      description: Create order
      tags:
        - Order Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDtoForCreateOrder'
      responses:
        '200':
          description: Successfully order created
        '404':
          description: Not found
  /by-date-and-totalamount:
    get:
      summary: Get orders by Date and Total amount
      description: Returns list of orders by parameters
      tags:
        - Order Management
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
            pattern: 'yyyy-MM-dd'
        - name: totalAmount
          in: query
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Successfully done
        '404':
          description: The resource you were trying to reach is not found
  /by-date-excluding-product:
    get:
      summary: Get orders by Date and Excluding some products
      description: Returns list of orders by parameters
      tags:
        - Order Management
      parameters:
        - name: productName
          in: query
          required: true
          schema:
            type: string
        - name: dateStart
          in: query
          required: true
          schema:
            type: string
            format: date
            pattern: 'yyyy-MM-dd'
        - name: dateEnd
          in: query
          required: true
          schema:
            type: string
            format: date
            pattern: 'yyyy-MM-dd'
      responses:
        '200':
          description: Successfully done
        '404':
          description: The resource you were trying to reach is not found
components:
  schemas:
    OrderDtoForCreateOrder:
      type: object
      properties:
        orderConsumer:
          type: string
          description: Покупатель
          example: "Иван Иванов"
        deliveryAddress:
          type: string
          description: Адрес доставки
          example: "ул. Ленина, д. 10"
        paymentMethod:
          type: string
          description: Метод оплаты
          example: "Карта"
        deliveryMethod:
          type: string
          description: Метод доставки
          example: "Курьер"
        orderDetails:
          type: array
          description: Детали заказа
          items:
            $ref: '#/components/schemas/OrderDetailsDto'
          minItems: 1
      required:
        - orderConsumer
        - deliveryAddress
        - paymentMethod
        - deliveryMethod
        - orderDetails
    OrderDetailsDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор детали заказа
          example: 1
        productArticle:
          type: integer
          format: int64
          description: Артикул товара
          example: 123456
        productName:
          type: string
          description: Название товара
          example: "Смартфон"
        productQuantity:
          type: integer
          format: int32
          description: Количество товара
          example: 2
        productPrice:
          type: number
          format: double
          description: Цена товара
          example: 100.50
      required:
        - id
        - productArticle
        - productName
        - productQuantity
        - productPrice